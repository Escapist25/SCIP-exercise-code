(define a (list 1 (list 2 (list 3 4) (list 5))))
(define (square-tree tree)
  (cond ((null? tree) nil)
        ((not (pair? tree)) (square tree))
        (else (cons (square-tree (car tree))
                    (square-tree (cdr tree))))))
(define (square-tree tree)
  (map (lambda (tree) 
         (if (pair? tree)
           (square-tree tree)
           (square tree))) 
       tree))
(square-tree a)
(square 5)
