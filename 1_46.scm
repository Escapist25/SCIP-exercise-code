(define (interactive-improve good-enough improve)
  (define (iter x)
    (if (good-enough x)
      x
      (iter (improve x))))
  iter)
(define (average-dump f)
  (define average (lambda (x y) (/ (+ x y) 2)))
  (lambda (x) (average x (f x))))
(define (mysqrt x)
  (define (good-enough y)
    (< (abs (- y (/ x y))) 0.00001))
  (define (improve y)
    ((average-dump (lambda (t) (/ x t))) y))
  ((interactive-improve good-enough improve) 5))
(define (fixed-point f first-guess)
  (define (good-enough? x)
    (< (abs (- x (f x))) 0.00001))
  ((interactive-improve good-enough? (lambda (x) (f x))) first-guess)) 
(display (fixed-point cos 1.0))
