(define (make-monitored f)
  (define count 0)
  (lambda (first . rest)
    (cond ((eq? first `how-many-calls?) count)
          ((eq? first `reset-count) (set! count 0))
          (else (begin (set! count (+ 1 count)) 
                       (apply f (cons first rest)))))))
(define mf (make-monitored max)) 
(mf `how-many-calls?)
(mf 4 5 6)
(mf `reset-count)
